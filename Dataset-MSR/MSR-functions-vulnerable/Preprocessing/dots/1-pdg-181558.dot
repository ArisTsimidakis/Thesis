digraph "FUN1" {  
"8" [label = <(METHOD,FUN1)<SUB>1</SUB>> ]
"54" [label = <(METHOD_RETURN,int)<SUB>1</SUB>> ]
"9" [label = <(PARAM,struct VAR1 *VAR1)<SUB>1</SUB>> ]
"10" [label = <(PARAM,struct VAR2 *VAR3)<SUB>1</SUB>> ]
"11" [label = <(PARAM,int VAR4)<SUB>1</SUB>> ]
"42" [label = <(&lt;operator&gt;.assignment,VAR1-&gt;VAR8 = FUN3(VAR1))<SUB>26</SUB>> ]
"48" [label = <(FUN4,FUN4(VAR1, VAR4, VAR3))<SUB>27</SUB>> ]
"52" [label = <(RETURN,return 0;,return 0;)<SUB>28</SUB>> ]
"15" [label = <(&lt;operator&gt;.equals,VAR4 == VAR6)<SUB>5</SUB>> ]
"53" [label = <(LITERAL,0,return 0;)<SUB>28</SUB>> ]
"19" [label = <(&lt;operator&gt;.assignment,VAR5 = FUN2(VAR3, &amp;VAR1-&gt;VAR7))<SUB>7</SUB>> ]
"46" [label = <(FUN3,FUN3(VAR1))<SUB>26</SUB>> ]
"28" [label = <(&lt;operator&gt;.lessThan,VAR5 &lt; 0)<SUB>9</SUB>> ]
"35" [label = <(&lt;operator&gt;.equals,VAR5 == 0)<SUB>13</SUB>> ]
"21" [label = <(FUN2,FUN2(VAR3, &amp;VAR1-&gt;VAR7))<SUB>7</SUB>> ]
"32" [label = <(RETURN,return 0;,return 0;)<SUB>11</SUB>> ]
"39" [label = <(&lt;operator&gt;.assignment,VAR3 = NULL)<SUB>15</SUB>> ]
"33" [label = <(LITERAL,0,return 0;)<SUB>11</SUB>> ]
"43" [label = <(&lt;operator&gt;.indirectFieldAccess,VAR1-&gt;VAR8)<SUB>26</SUB>> ]
"45" [label = <(FIELD_IDENTIFIER,VAR8,VAR8)<SUB>26</SUB>> ]
"23" [label = <(&lt;operator&gt;.addressOf,&amp;VAR1-&gt;VAR7)<SUB>7</SUB>> ]
"24" [label = <(&lt;operator&gt;.indirectFieldAccess,VAR1-&gt;VAR7)<SUB>7</SUB>> ]
"26" [label = <(FIELD_IDENTIFIER,VAR7,VAR7)<SUB>7</SUB>> ]
  "32" -> "54"  [ label = "DDG: &lt;RET&gt;"] 
  "52" -> "54"  [ label = "DDG: &lt;RET&gt;"] 
  "9" -> "54"  [ label = "DDG: VAR1"] 
  "15" -> "54"  [ label = "DDG: VAR4"] 
  "15" -> "54"  [ label = "DDG: VAR4 == VAR6"] 
  "21" -> "54"  [ label = "DDG: VAR3"] 
  "21" -> "54"  [ label = "DDG: &amp;VAR1-&gt;VAR7"] 
  "19" -> "54"  [ label = "DDG: FUN2(VAR3, &amp;VAR1-&gt;VAR7)"] 
  "19" -> "54"  [ label = "DDG: VAR5 = FUN2(VAR3, &amp;VAR1-&gt;VAR7)"] 
  "28" -> "54"  [ label = "DDG: VAR5"] 
  "28" -> "54"  [ label = "DDG: VAR5 &lt; 0"] 
  "39" -> "54"  [ label = "DDG: NULL"] 
  "15" -> "54"  [ label = "DDG: VAR6"] 
  "8" -> "9"  [ label = "DDG: "] 
  "8" -> "10"  [ label = "DDG: "] 
  "8" -> "11"  [ label = "DDG: "] 
  "46" -> "42"  [ label = "DDG: VAR1"] 
  "53" -> "52"  [ label = "DDG: 0"] 
  "8" -> "52"  [ label = "DDG: "] 
  "42" -> "48"  [ label = "DDG: VAR1-&gt;VAR8"] 
  "46" -> "48"  [ label = "DDG: VAR1"] 
  "8" -> "48"  [ label = "DDG: "] 
  "9" -> "48"  [ label = "DDG: VAR1"] 
  "15" -> "48"  [ label = "DDG: VAR4"] 
  "10" -> "48"  [ label = "DDG: VAR3"] 
  "21" -> "48"  [ label = "DDG: VAR3"] 
  "39" -> "48"  [ label = "DDG: VAR3"] 
  "8" -> "53"  [ label = "DDG: "] 
  "11" -> "15"  [ label = "DDG: VAR4"] 
  "8" -> "15"  [ label = "DDG: "] 
  "21" -> "19"  [ label = "DDG: VAR3"] 
  "21" -> "19"  [ label = "DDG: &amp;VAR1-&gt;VAR7"] 
  "9" -> "46"  [ label = "DDG: VAR1"] 
  "8" -> "46"  [ label = "DDG: "] 
  "10" -> "21"  [ label = "DDG: VAR3"] 
  "8" -> "21"  [ label = "DDG: "] 
  "9" -> "21"  [ label = "DDG: VAR1"] 
  "19" -> "28"  [ label = "DDG: VAR5"] 
  "8" -> "28"  [ label = "DDG: "] 
  "33" -> "32"  [ label = "DDG: 0"] 
  "8" -> "32"  [ label = "DDG: "] 
  "28" -> "35"  [ label = "DDG: VAR5"] 
  "8" -> "35"  [ label = "DDG: "] 
  "8" -> "39"  [ label = "DDG: "] 
  "8" -> "33"  [ label = "DDG: "] 
  "15" -> "24"  [ label = "CDG: "] 
  "15" -> "21"  [ label = "CDG: "] 
  "15" -> "48"  [ label = "CDG: "] 
  "15" -> "26"  [ label = "CDG: "] 
  "15" -> "42"  [ label = "CDG: "] 
  "15" -> "23"  [ label = "CDG: "] 
  "15" -> "19"  [ label = "CDG: "] 
  "15" -> "28"  [ label = "CDG: "] 
  "15" -> "52"  [ label = "CDG: "] 
  "15" -> "46"  [ label = "CDG: "] 
  "15" -> "45"  [ label = "CDG: "] 
  "15" -> "43"  [ label = "CDG: "] 
  "28" -> "48"  [ label = "CDG: "] 
  "28" -> "32"  [ label = "CDG: "] 
  "28" -> "42"  [ label = "CDG: "] 
  "28" -> "52"  [ label = "CDG: "] 
  "28" -> "46"  [ label = "CDG: "] 
  "28" -> "45"  [ label = "CDG: "] 
  "28" -> "35"  [ label = "CDG: "] 
  "28" -> "43"  [ label = "CDG: "] 
  "35" -> "39"  [ label = "CDG: "] 
}
